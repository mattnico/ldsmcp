name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Build DXT Server
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install dependencies
      working-directory: ./server
      run: npm ci
      
    - name: Run security audit
      working-directory: ./server
      run: npm audit --audit-level high
      
    - name: Build project
      working-directory: ./server
      run: npm run build
      
    - name: Validate manifest.json
      run: |
        node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          console.log('Manifest validation passed');
          console.log('Extension name:', manifest.name);
          console.log('Version:', manifest.version);
        "
        
    - name: Check build output
      working-directory: ./server
      run: |
        ls -la build/
        node -c build/index.js
        
    - name: Test MCP server startup
      working-directory: ./server
      run: |
        timeout 10s node build/index.js || echo "Server startup test completed"
        
  validate-dxt:
    name: Validate Desktop Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate DXT structure
      run: |
        echo "Checking DXT structure..."
        [ -f "manifest.json" ] && echo "✓ manifest.json exists" || exit 1
        [ -d "server" ] && echo "✓ server directory exists" || exit 1
        [ -f "server/package.json" ] && echo "✓ server/package.json exists" || exit 1
        [ -f "server/src/index.ts" ] && echo "✓ server/src/index.ts exists" || exit 1
        echo "DXT structure validation passed"
        
    - name: Check documentation
      run: |
        [ -f "README.md" ] && echo "✓ README.md exists" || exit 1
        [ -d "docs" ] && echo "✓ docs directory exists" || exit 1
        [ -f "docs/search-api/README.md" ] && echo "✓ API documentation exists" || exit 1
        echo "Documentation validation passed"